{"version":3,"file":"static/js/3.00430fd3.chunk.js","mappings":"qPACA,G,QAAA,CAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mBCoBhL,MAXA,SAAoBA,GAChB,IAAIC,EAAO,aAAeD,EAAME,GAChC,OACI,0BACI,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,YCG1C,MAPA,SAAiBN,GACb,OACK,gBAAKG,UAAWC,EAAAA,QAAhB,SACKJ,EAAMO,W,uCCsCpB,MA7BA,SAAiBP,GACb,IAAIQ,EAAQR,EAAMS,YACdC,EAAkBF,EAAMG,YACvBC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAuBP,KAAMO,EAAEP,KAAMJ,GAAIW,EAAEX,IAA1BW,EAAEX,OAC7BY,EAAmBN,EAAMO,YACxBH,KAAI,SAACI,GAAD,OAAO,SAAC,EAAD,CAAoBT,QAASS,EAAET,SAAjBS,EAAEd,OAQhC,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKM,KAEL,gBAAKP,UAAWC,EAAAA,SAAhB,UACI,yBAAMU,OAGV,SAACG,EAAD,CAAqBC,SAdP,SAACC,GACnBnB,EAAMoB,YAAYD,EAAOE,uBAqB3BC,GAAcC,EAAAA,EAAAA,GAAiB,IAcxBN,GAAsBO,EAAAA,EAAAA,GAA0B,CAACC,KAAM,wBAAjCD,EAbwC,SAACxB,GACxE,OACI,iBAAMkB,SAAUlB,EAAM0B,aAAtB,UACI,4BACI,0BAAK,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUvB,KAAM,iBAAkBwB,SAAU,CAACC,EAAAA,EAAUT,GAClEU,YAAa,0BACzB,0BACI,+C,8BCjDTC,EAAgB,SAACzB,GACxB,MAAM,CACFC,YAAaD,EAAM0B,cAGhBC,EAAmB,SAACC,GAC3B,MAAM,CACFhB,YAAY,SAACC,GACTe,GAASC,EAAAA,EAAAA,GAAmBhB,OAcxC,GAAgBiB,EAAAA,EAAAA,KACZC,EAAAA,EAAAA,IAAQN,EAAiBE,GACzBK,EAAAA,EAFJ,CAGEC","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__XX6XM\",\"dialogsItems\":\"Dialogs_dialogsItems__XCXjP\",\"active\":\"Dialogs_active__+q0KG\",\"messages\":\"Dialogs_messages__bp+70\",\"message\":\"Dialogs_message__D2Gyy\"};","import s from \"./../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport React from \"react\";\n\n\ntype DialogItem = {\n    name: string\n    id: number\n}\n\nfunction DialogItem(props: DialogItem) {\n    let path = '/dialogs/1' + props.id;\n    return (\n        <div>\n            <div className={s.dialog + ' ' + s.active}>\n                <NavLink to={path}>{props.name}</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default DialogItem;\n","import s from \"./../Dialogs.module.css\";\nimport React from \"react\";\nimport {DialogsType, MessageType} from \"../../../state\";\n\n\nexport type MessagePropsType = {\n     message: string\n\n}\n\n\nfunction Message(props: MessagePropsType) {\n    return (\n         <div className={s.message}>\n             {props.message}\n        </div>\n    )\n}\nexport default Message;\n","import React, {ChangeEvent} from 'react';\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\n\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport TextArea from \"antd/es/input/TextArea\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\n\n// export type DialogsPropsType = {\n//     store: RootStateType\n//     state: DialogsPageType\n//     //newMessageBody:string\n// }\ntype AddMessageType = {\n    newMessageBody: string\n\n}\n\nfunction Dialogs(props: DialogsPropsType) {\n    let state = props.dialogsPage;\n    let dialogsElements = state.dialogsData\n        .map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>)\n    let messagesElements = state.messageData\n        .map((m) => <Message key={m.id} message={m.message}/>)\n    // let newMessagesBody = action.newMessageBody\n    // if(!props.isAuth) return <Redirect to={\"/login\"}/>\n    const addNewMessage = (values: AddMessageType) => {\n        props.sendMessage(values.newMessageBody)\n\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n\n    )\n\n}\n\nexport default Dialogs;\nconst maxLength50 = maxLengthCreator(50)\nexport const AddMessageForm: React.FC<InjectedFormProps<AddMessageType>> = (props: any) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <div><Field component={Textarea} name={'newMessageBody'} validate={[required, maxLength50]}\n                            placeholder={'Enter your message'}></Field></div>\n                <div>\n                    <button>Send</button>\n                </div>\n            </div>\n        </form>\n    )\n}\nexport const AddMessageFormRedux = reduxForm<AddMessageType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import {connect} from \"react-redux\";\nimport Dialogs from \"./Dialogs\";\nimport {DialogsPageType, sendMessageCreator} from \"../../redux/DialogsPageReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\nimport {compose, Dispatch} from \"redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport React from \"react\";\nimport {getUserProfile} from \"../../redux/ProfilePageReducer\";\nimport {withRouter} from \"react-router-dom\";\n\n\n\nexport let mapStateToProps=(state:AppStateType)=>{\n    return{\n        dialogsPage: state.messagePage,\n    }\n}\nexport let mapDispatchToProps=(dispatch: Dispatch)=>{\n    return{\n        sendMessage:(newMessageBody:string)=>{\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\ntype MapStatePropsType = {\n    dialogsPage: DialogsPageType,\n}\ntype MapDispatchPropsType = {\n    sendMessage: (newMessageBody:string)=>void\n}\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\n//let AuthRedirectComponent = withAuthRedirect(Dialogs)\n//export const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent)\n\nexport default  compose<React.ComponentType>(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)"],"names":["props","path","id","className","s","to","name","message","state","dialogsPage","dialogsElements","dialogsData","map","d","messagesElements","messageData","m","AddMessageFormRedux","onSubmit","values","sendMessage","newMessageBody","maxLength50","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","validate","required","placeholder","mapStateToProps","messagePage","mapDispatchToProps","dispatch","sendMessageCreator","compose","connect","withAuthRedirect","Dialogs"],"sourceRoot":""}